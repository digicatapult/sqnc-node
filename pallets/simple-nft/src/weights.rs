
//! Autogenerated weights for pallet_simple_nft
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-11-01, STEPS: `500`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/dscp-node
// benchmark
// pallet
// --chain=dev
// --steps=500
// --repeat=20
// --pallet=pallet-simple-nft
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./pallets/simple-nft/src/weights.rs
// --template=./.maintain/frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_simple_nft.
pub trait WeightInfo {
	fn run_process(i: u32, o: u32, ) -> Weight;
}

/// Weights for pallet_simple_nft using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: SimpleNFT TokensById (r:1 w:11)
	// Storage: SimpleNFT LastToken (r:1 w:1)
	/// The range of component `i` is `[1, 10]`.
	/// The range of component `o` is `[1, 10]`.
	fn run_process(i: u32, o: u32, ) -> Weight {
		// Minimum execution time:  nanoseconds.
		Weight::from_ref_time(96_000_000 as u64)
			// Standard Error: 33_418
			.saturating_add(Weight::from_ref_time(6_519_250 as u64).saturating_mul(i as u64))
			// Standard Error: 33_418
			.saturating_add(Weight::from_ref_time(2_514_975 as u64).saturating_mul(o as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(i as u64)))
			.saturating_add(T::DbWeight::get().writes(12 as u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: SimpleNFT TokensById (r:1 w:11)
	// Storage: SimpleNFT LastToken (r:1 w:1)
	/// The range of component `i` is `[1, 10]`.
	/// The range of component `o` is `[1, 10]`.
	fn run_process(i: u32, o: u32, ) -> Weight {
		// Minimum execution time:  nanoseconds.
		Weight::from_ref_time(96_000_000 as u64)
			// Standard Error: 33_418
			.saturating_add(Weight::from_ref_time(6_519_250 as u64).saturating_mul(i as u64))
			// Standard Error: 33_418
			.saturating_add(Weight::from_ref_time(2_514_975 as u64).saturating_mul(o as u64))
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
			.saturating_add(RocksDbWeight::get().reads((1 as u64).saturating_mul(i as u64)))
			.saturating_add(RocksDbWeight::get().writes(12 as u64))
	}
}
