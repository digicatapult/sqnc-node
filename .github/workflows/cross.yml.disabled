name: Build new release

on:
  push:
    branches:
      - feature/aarch64-hacking
  pull_request:
    branches:
      - feature/aarch64-hacking

permissions:
  contents: write
  packages: write
  pull-requests: read

jobs:
  # Gets the build version and information about if this is a new version
  get-version:
    name: Get version
    runs-on: ubuntu-latest
    outputs:
      is_new_version: ${{ steps.get_version.outputs.IS_NEW_VERSION }}
      version: ${{ steps.get_version.outputs.VERSION }}
      sane_branch_name_key: ${{ steps.get_version.outputs.SANE_BRANCH_NAME_KEY }}
      build_date: ${{ steps.get_version.outputs.BUILD_DATE }}
      is_prerelease: ${{ steps.get_version.outputs.IS_PRERELEASE }}
      toolchain: ${{ steps.get_toolchain.outputs.TOOLCHAIN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: git fetch --tags
      - run: pip3 install yq==2.13.0
      - name: Get Build Version
        id: get_version
        run: ./scripts/check-version.sh
        shell: bash
      - name: Get Toolchain Version
        id: get_toolchain
        run: |
          echo "TOOLCHAIN=$(cat rust-toolchain)" >> $GITHUB_OUTPUT

  # build cross
  build-cross:
    name: Build cross
    runs-on: ubuntu-latest
    needs: [get-version]

    steps:
      - uses: actions/checkout@v3
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ needs.get-version.outputs.toolchain }}
          target: wasm32-unknown-unknown
      - name: install protobuf compiler
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu protobuf-compiler libclang-dev g++-aarch64-linux-gnu
          rustup toolchain install nightly
          rustup target add aarch64-unknown-linux-gnu --toolchain nightly
          rustup target add wasm32-unknown-unknown --toolchain nightly
      - name: Cargo build
        uses: actions-rs/cargo@v1
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: "aarch64-linux-gnu-gcc"
          BINDGEN_EXTRA_CLANG_ARGS: "--sysroot=/usr/aarch64-linux-gnu -mfloat-abi=hard"
        with:
          command: build
          args: --target aarch64-unknown-linux-gnu
