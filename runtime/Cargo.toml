[package]
name = "sqnc-node-runtime"
version = "10.0.6"
authors = ["Digital Catapult <https://www.digicatapult.org.uk>"]
edition = "2021"
license = "Apache-2.0"
publish = false
repository = "https://github.com/digicatapult/sqnc-node/"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
parity-scale-codec = { workspace = true, features = ["derive"] }
scale-info = { workspace = true, features = ["derive", "serde"] }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true, features = ["alloc"] }

pallet-babe = { workspace = true }
pallet-balances = { workspace = true }
frame-support = { workspace = true }
pallet-grandpa = { workspace = true }
pallet-sudo = { workspace = true }
frame-system = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
frame-executive = { workspace = true }
sp-api = { workspace = true }
sp-block-builder = { workspace = true }
sp-consensus-babe = { workspace = true }
sp-consensus-grandpa = { workspace = true, features = ["serde"] }
sp-core = { workspace = true, features = ["serde"] }
sp-genesis-builder = { workspace = true }
sp-inherents = { workspace = true }
sp-offchain = { workspace = true }
sp-runtime = { workspace = true, features = ["serde"] }
sp-session = { workspace = true }
sp-std = { workspace = true }
sp-storage = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-version = { workspace = true, features = ["serde"] }
frame-try-runtime = { workspace = true, optional = true }

# Dependencies not in node template
pallet-collective = { workspace = true }
pallet-membership = { workspace = true }
pallet-node-authorization = { workspace = true }
pallet-preimage = { workspace = true }
pallet-scheduler = { workspace = true }

# Used for the node template's RPCs
frame-system-rpc-runtime-api = { workspace = true }

# Used for runtime benchmarking
frame-benchmarking = { workspace = true, optional = true }
frame-system-benchmarking = { workspace = true, optional = true }
hex-literal = { workspace = true, optional = true }

# Local Dependencies
pallet-doas = { default-features = false, path = '../pallets/doas' }
pallet-utxo-nft = { default-features = false, path = '../pallets/utxo-nft' }
pallet-process-validation = { default-features = false, path = '../pallets/process-validation' }
pallet-symmetric-key = { default-features = false, path = '../pallets/symmetric-key' }
pallet-transaction-payment-free = { default-features = false, path = '../pallets/transaction-payment-free' }
sqnc-runtime-types = { default-features = false, path = './types' }

[build-dependencies]
substrate-wasm-builder = { workspace = true }

[features]
default = ["std"]
std = [
    "frame-try-runtime?/std",
    "frame-system-benchmarking?/std",
    "frame-benchmarking?/std",
    "parity-scale-codec/std",
    "scale-info/std",
    "serde_json/std",
    "frame-executive/std",
    "frame-support/std",
    "frame-system-rpc-runtime-api/std",
    "frame-system/std",
    "pallet-babe/std",
    "pallet-balances/std",
    "pallet-collective/std",
    "pallet-doas/std",
    "pallet-grandpa/std",
    "pallet-membership/std",
    "pallet-node-authorization/std",
    "pallet-preimage/std",
    "pallet-process-validation/std",
    "pallet-sudo/std",
    "pallet-timestamp/std",
    "pallet-transaction-payment-free/std",
    "pallet-transaction-payment-rpc-runtime-api/std",
    "sp-api/std",
    "sp-block-builder/std",
    "sp-consensus-babe/std",
    "sp-consensus-grandpa/std",
    "sp-core/std",
    "sp-genesis-builder/std",
    "sp-inherents/std",
    "sp-offchain/std",
    "sp-runtime/std",
    "sp-session/std",
    "sp-std/std",
    "sp-transaction-pool/std",
    "sp-version/std",
    "sqnc-runtime-types/std",
    "pallet-utxo-nft/std",
    "pallet-scheduler/std",
    "pallet-symmetric-key/std",
]
runtime-benchmarks = [
    "frame-benchmarking/runtime-benchmarks",
    "frame-support/runtime-benchmarks",
    "frame-system-benchmarking/runtime-benchmarks",
    "frame-system/runtime-benchmarks",
    "hex-literal",
    "pallet-babe/runtime-benchmarks",
    "pallet-balances/runtime-benchmarks",
    "pallet-collective/runtime-benchmarks",
    "pallet-grandpa/runtime-benchmarks",
    "pallet-timestamp/runtime-benchmarks",
    "pallet-scheduler/runtime-benchmarks",
    "pallet-utxo-nft/runtime-benchmarks",
    "pallet-symmetric-key/runtime-benchmarks",
    "pallet-process-validation/runtime-benchmarks",
    "sp-runtime/runtime-benchmarks",
]
try-runtime = [
    "frame-try-runtime",
    "frame-executive/try-runtime",
    "frame-system/try-runtime",
    "frame-support/try-runtime",
    "pallet-babe/try-runtime",
    "pallet-balances/try-runtime",
    "pallet-collective/try-runtime",
    "pallet-doas/try-runtime",
    "pallet-grandpa/try-runtime",
    "pallet-membership/try-runtime",
    "pallet-node-authorization/try-runtime",
    "pallet-preimage/try-runtime",
    "pallet-process-validation/try-runtime",
    "pallet-scheduler/try-runtime",
    "pallet-utxo-nft/try-runtime",
    "pallet-sudo/try-runtime",
    "pallet-symmetric-key/try-runtime",
    "pallet-timestamp/try-runtime",
    "pallet-transaction-payment-free/try-runtime",
]
